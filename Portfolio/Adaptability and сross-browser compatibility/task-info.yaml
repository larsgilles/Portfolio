type: edu
files:
- name: src/index.html
  visible: true
  text: |-
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Hello, World!</title>
    </head>
    <body>

    </body>
    </html>
  learner_created: false
- name: test/test.js
  visible: false
  text: |
    const puppeteer = require('puppeteer');
    const path = require('path');
    // '..' since we're in the hstest/ subdirectory; learner is supposed to have src/index.html
    const pagePath = 'file://' + path.resolve(__dirname, '../src/index.html');

    const hs = require('hs-test-web');

    const sleep = (ms) => new Promise(res => setTimeout(res, ms));

    async function stageTest() {
        const browser = await puppeteer.launch({
            headless: false,
            defaultViewport: null,
            args:['--start-maximized']
        });

        const page = await browser.newPage();
        await page.goto(pagePath);

        page.on('console', msg => console.log(msg.text()));

        let selector = 'button[class="open-window"]';
        page.evaluate((selector) => document.querySelector(selector).click(), selector);

        await sleep(1000);

        let result = await hs.testPage(page,
            // Test #1 - check if the document has the header
            () => {
                let headers = document.getElementsByTagName('header');

                if (headers === null || headers.length === 0) {
                    return hs.wrong('Cannot find the header in the document.');
                } else if (headers.length > 1) {
                    return hs.wrong('Found more than one header in the document.');
                }

                return hs.correct();
            },

            // Test #2 - check if the document has at least one <nav> element
            () => {
                let nav = document.getElementsByTagName('nav');

                if (nav === null || nav.length === 0) {
                    return hs.wrong('Cannot find the nav element on your web page.');
                }

                return hs.correct();
            },

            // Test #3 - check if the document has the <h1> element
            () => {
                let headings1 = document.getElementsByTagName('h1');

                if (headings1 === null || headings1.length === 0) {
                    return hs.wrong('Cannot find h1 element on your web page.');
                }

                let header = headings1[0]
                let title = header.textContent || header.innerText;

                if (!title || title.length === 0) {
                    return hs.wrong('Cannot find a text within h1 element');
                }

                return hs.correct();
            },

            // Test #4 - check if the document has the <h1> element
            () => {
                let html = document.getElementsByTagName('html')[0];

                let margin = window.getComputedStyle(html).margin;
                if (margin !== '0px') {
                    return hs.wrong('It seems that you have not reset the default margin property');
                }

                let padding = window.getComputedStyle(html).padding;
                if (padding !== '0px') {
                    return hs.wrong('It seems that you have not reset the default padding property');
                }

                return hs.correct();
            },

            // Test #5 - check if the document has the <footer> element
            () => {
                let footers = document.getElementsByTagName('footer');

                if (footers === null || footers.length === 0) {
                    return hs.wrong('Cannot find the footer in the document.');
                } else if (footers.length > 1) {
                    return hs.wrong('Found more than one footer in the document.');
                }

                return hs.correct();
            },

            // Test #6 - check if the document has at least three section elements
            () => {
                let sections = document.getElementsByTagName('section');

                if (sections === null || sections.length < 3) {
                    return hs.wrong(`Cannot find tree sections elements. There are only ${sections.length}.`);
                }

                return hs.correct();
            },

            // Test #7 - check the "about me" section
            () => {
                let sections = document.getElementById('about');

                if (sections === null || sections.length < 1) {
                    return hs.wrong('Cannot find a section with the "about" id.');
                }

                return hs.correct();
            },

            // Test #8 - check the "portfolio" section
            () => {
                let sections = document.getElementById('portfolio');

                if (sections === null || sections.length < 1) {
                    return hs.wrong('Cannot find a section with the "portfolio" id.');
                }

                return hs.correct();
            },

            // Test #9 - check the "contacts" section
            () => {
                let sections = document.getElementById('contacts');

                if (sections === null || sections.length < 1) {
                    return hs.wrong('Cannot find a section with the "contacts" id.');
                }

                return hs.correct();
            },

            // Test #10 - check header and footer background colors
            () => {
                function getRealColor(elem) {
                    try {
                        while (elem) {
                            let color = window.getComputedStyle(elem).backgroundColor;
                            if (color !== "rgba(0, 0, 0, 0)") {
                                let match = color.match(/^rgba?\((\d+), (\d+), (\d+)(, [\d.]+)?\)$/i);
                                return {
                                    red: Number(match[1]),
                                    green: Number(match[2]),
                                    blue: Number(match[3]),
                                    hex: Number(match[1]) * 65536 + Number(match[2]) * 256 + Number(match[3])
                                };
                            }
                            elem = elem.parentElement;
                        }
                    } catch (e) {
                        return null;
                    }
                    return null;
                }

                let headers = document.getElementsByTagName('header');

                if (headers === null || headers.length === 0) {
                    return hs.wrong('Cannot find the header in the document.');
                } else if (headers.length > 1) {
                    return hs.wrong('Found more than one header in the document.');
                }

                let hasBackgroundImage = getComputedStyle(headers[0]).background.includes('url');

                let headerBack = getRealColor(headers[0]);
                let noCustomHeaderColor = headerBack === null || headerBack.hex === 0xFFFFFF;
                if (noCustomHeaderColor && !hasBackgroundImage) {
                    return hs.wrong("Looks like header's background color is not set. " +
                        "It should be an image or some non-white color.")
                }

                let footers = document.getElementsByTagName('footer');

                if (footers === null || footers.length === 0) {
                    return hs.wrong('Cannot find the footer in the document.');
                } else if (headers.length > 1) {
                    return hs.wrong('Found more than one footer in the document.');
                }

                hasBackgroundImage = getComputedStyle(footers[0]).background.includes('url');

                let footerBack = getRealColor(footers[0]);
                let noCustomFooterColor = footerBack === null || footerBack.hex === 0xFFFFFF;
                if (noCustomFooterColor && !hasBackgroundImage) {
                    return hs.wrong("Looks like footer's background color is not set. " +
                        "It should be an image or some non-white color.")
                }

                return hs.correct()
            },

            // Test #11 - check click button and show popup window
            () => {
                let buttons = document.getElementsByClassName('open-window');

                if (buttons === null || buttons.length === 0) {
                    return hs.wrong('Cannot find a button with the class "open-window" to open the pop-up window.');
                }

                let forms = document.getElementsByClassName('window');

                if (forms === null || forms.length === 0) {
                    return hs.wrong('Cannot find the element with the class "window".');
                }

                return hs.correct()
            },

            // Test #12 -  check that the page has a hamburger menu
            () => {
                let buttons = document.getElementsByClassName('hamburger');

                if (buttons === null || buttons.length === 0) {
                    return hs.wrong('Not find the hamburger menu on your page. Create it and set the "hamburger" class to the tag that wraps the menu elements.');
                }

                return hs.correct()
            },

            // Test #13
            () => {
                let burger = document.getElementsByClassName('hamburger')[0];

                let display = window.getComputedStyle(burger).display;
                let visibility = window.getComputedStyle(burger).visibility;

                if (window.innerWidth >= 900 && (display === 'none' || visibility === 'hidden')) {
                    return hs.correct()
                }

                return hs.wrong('The menu must not be hamburger when the screen width >= 900 px');
            }
        );

        await browser.close();
        return result;
    }


    jest.setTimeout(30000);
    test("Test stage", async () => {
            let result = await stageTest();
            if (result['type'] === 'wrong') {
                fail(result['message']);
            }
        }
    );
  learner_created: false
- name: src/main.css
  visible: true
  learner_created: true
- name: src/mark.jpg
  visible: true
  learner_created: true
- name: src/tony.jpg
  visible: true
  text: 
  learner_created: true
- name: src/popUp.html
  visible: true
  learner_created: true
- name: src/download.jpg
  visible: true
  text: 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
  learner_created: true
- name: src/baseline_menu_black_24dp.png
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/137/stages/734/implement#comment
status: Solved
feedback:
  message: Well done! You've finished the project. Select a new project on <a href="https://hyperskill.org/projects">JetBrains
    Academy</a> to continue learning.
  time: Fri, 23 Jul 2021 07:09:42 UTC
record: -1
